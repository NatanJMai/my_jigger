require 'rails_helper'
require 'devise'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/menu_sections", type: :request do

  # This should return the minimal set of attributes required to create a valid
  # MenuSection. As you add validations to MenuSection, be sure to
  # adjust the attributes here as well.
  describe "(Not logged in Admin) Should be redirect to sign_path" do
    before do
      @admin_user = create(:admin_user)
      @menu = create(:menu, organization: create(:organization, manager: @admin_user))
    end

    it "Redirect to Login URL" do
      get new_admin_menu_menu_section_path(@menu)
      assert_redirected_to new_user_session_url
    end
  end

  describe "(Logged Admin) GET Routes " do
    before do
      @admin_user = create(:admin_user)
      @menu = create(:menu, organization: create(:organization, manager: @admin_user))
      @menu_section = create(:menu_section, menu: @menu)

      sign_in @admin_user
    end

    describe 'GET /new' do
      it "renders a successful response" do
        get new_admin_menu_menu_section_path(@menu)
        expect(response).to be_successful
      end
    end

    describe "GET /show" do
      it "renders a successful response" do
        get admin_menu_section_path(@menu_section)
        # expect(response).to be_successful
      end
    end

    describe "GET /index" do
      it "renders a successful response" do
        get admin_menu_menu_sections_path(@menu)
        expect(response).to be_successful
      end
    end

    describe "GET /edit" do
      it "renders a successful response" do
        get edit_admin_menu_section_path(@menu_section)
        expect(response).to be_successful
      end
    end
  end
end